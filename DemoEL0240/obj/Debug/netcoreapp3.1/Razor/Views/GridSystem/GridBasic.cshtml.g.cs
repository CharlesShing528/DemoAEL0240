#pragma checksum "D:\07_DemoCode\DemoEL0240\DemoEL0240\Views\GridSystem\GridBasic.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7fe935401983c733b01c1857f3d62ac55896f2b0"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_GridSystem_GridBasic), @"mvc.1.0.view", @"/Views/GridSystem/GridBasic.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\07_DemoCode\DemoEL0240\DemoEL0240\Views\_ViewImports.cshtml"
using DemoEL0240;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\07_DemoCode\DemoEL0240\DemoEL0240\Views\_ViewImports.cshtml"
using DemoEL0240.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7fe935401983c733b01c1857f3d62ac55896f2b0", @"/Views/GridSystem/GridBasic.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ce2e47e54936a1be45ed518a9dbd57b6d37cba00", @"/Views/_ViewImports.cshtml")]
    public class Views_GridSystem_GridBasic : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\07_DemoCode\DemoEL0240\DemoEL0240\Views\GridSystem\GridBasic.cshtml"
  
    ViewData["Title"] = "GridBasic";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""jumbotron bg-info"">
    <h3>Grid System中的欄位配置</h3>
    <p>套用.col-md-1, .col-md-2 ~ .col-md-12</p>
</div>

<div class=""row raw"">
    <div class=""col-md-1"">欄位1</div>
    <div class=""col-md-1"">欄位2</div>
    <div class=""col-md-1"">欄位3</div>
    <div class=""col-md-1"">欄位4</div>
    <div class=""col-md-1"">欄位5</div>
    <div class=""col-md-1"">欄位6</div>
    <div class=""col-md-1"">欄位7</div>
    <div class=""col-md-1"">欄位8</div>
    <div class=""col-md-1"">欄位9</div>
    <div class=""col-md-1"">欄位10</div>
    <div class=""col-md-1"">欄位11</div>
    <div class=""col-md-1"">欄位12</div>
</div>

<div class=""row"">
    <div class=""col-md-1"">.col-md-1 ( 佔1個欄位寬度 )</div>
</div>

<div class=""row"">
    <div class=""col-md-2"">.col-md-2 ( 佔2個欄位寬度 )</div>
</div>

<div class=""row"">
    <div class=""col-md-3"">.col-md-3 ( 佔3個欄位寬度 )</div>
</div>

<div class=""row"">
    <div class=""col-md-4"">.col-md-4</div>
</div>

<div class=""row"">
    <div class=""col-md-5"">.col-md-5</div>
</div>

<div class=""row"">
    ");
            WriteLiteral(@"<div class=""col-md-6"">.col-md-6</div>
</div>

<div class=""row"">
    <div class=""col-md-7"">.col-md-7</div>
</div>

<div class=""row"">
    <div class=""col-md-8"">.col-md-8</div>
</div>

<div class=""row"">
    <div class=""col-md-9"">.col-md-9 </div>
</div>

<div class=""row"">
    <div class=""col-md-10"">.col-md-10</div>
</div>

<div class=""row"">
    <div class=""col-md-11"">.col-md-11</div>
</div>

<div class=""row"">
    <div class=""col-md-12"">.col-md-12</div>
</div>



");
            DefineSection("topCSS", async() => {
                WriteLiteral(@"
    <style>
        .row {
            margin-top: 5px;
            margin-bottom: 5px;
        }

            .row div:nth-child(1) {
                background-color: pink;
                border: 1px solid black;
            }

            .row div {
                border: 1px solid black;
                font-size: 1rem;
            }

            .row.raw div {
                background-color: lightgray !important;
                text-align: center;
            }

            .row.raw div, .row div {
                padding-top: 5px;
                padding-bottom: 5px;
            }
    </style>
");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
